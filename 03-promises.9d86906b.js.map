{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAiCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAxCMQ,SAASC,cAAc,SAC/BC,iBAAiB,UAE5B,SAAkBC,GAChBA,EAAEC,iBACF,MACEC,UAAYb,MAAAc,EAAKC,KAAEA,EAAIC,OAAEA,IACvBL,EAAEM,cAEN,GAAIH,EAAMI,MAAQ,GAAKH,EAAKG,MAAQ,GAAKF,EAAOE,MAAQ,EACtDC,EAAAvB,GAASwB,OAAOC,QAAQ,yCAEtB,IAAG,IAAIC,EAAI,EAAGA,EAAIN,EAAOE,MAAOI,GAAK,EAAG,CACxC,IAAIC,EAAWD,EAAI,EACnB,MAAME,EAAYC,OAAOX,EAAMI,OAASH,EAAKG,MAAQI,EAErDxB,EAAcyB,EAAUC,GACrBE,MAAK,EAAC3B,SAAEA,EAAQC,MAAEA,MACjBmB,EAAAvB,GAASwB,OAAOO,QACd,uBAAqB5B,QAAiBC,MAAU,IAGnD4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClBmB,EAAAvB,GAASwB,OAAOS,QACd,sBAAoB9B,QAAiBC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst submitForm = document.querySelector('.form');\nsubmitForm.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n\n  if (delay.value < 0 || step.value < 0 || amount.value < 0) {\n    Notiflix.Notify.warning(`❗ Please enter a positive number`);\n  } else {\n    for (let i = 0; i < amount.value; i += 1) {\n      let position = i + 1;\n      const stepDelay = Number(delay.value) + step.value * i;\n\n      createPromise(position, stepDelay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// function onSubmit(e) {\n//   e.preventDefault();\n\n//   const form = e.target;\n//   const firstDelay = e.currentTarget.delay;\n//   const delay = e.currentTarget.step;\n//   const amount = e.currentTarget.amount;\n\n//   const promiseNumbers = [];\n//   let sum = 0;\n\n//   while (promiseNumbers.length < amount.value) {\n//     promises.push((sum += 1));\n//   }\n\n//   setTimeout(() => {\n//     promises.forEach((promise, index) => {\n//       setTimeout(() => {\n//         createPromise(promise, delay.value)\n//           .then(({ position, delay }) => {\n//             Notiflix.Notify.success(\n//               `✅ Fulfilled promise ${position} in ${delay}ms`\n//             );\n//           })\n//           .catch(({ position, delay }) => {\n//             Notiflix.Notify.failure(\n//               `❌ Rejected promise ${position} in ${delay}ms`\n//             );\n//           });\n//       }, delay.value * index);\n//     });\n//   }, firstDelay.value);\n// }\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","elements","delay1","step","amount","currentTarget","value","$parcel$interopDefault","Notify","warning","i","position1","stepDelay","Number","then","success","catch","failure"],"version":3,"file":"03-promises.9d86906b.js.map"}